#

class connectionSetThing:
    def __init__(self,l):
        self.dat = [i for i in range(l)]
    def __getitem__(self,i):
        if i < 0 or i >= len(self.dat):
            return -1
        return self.dat[i]
    def disconnect(self,i):
        self.dat[i] = -1
        self.dat[i] = max(self.dat)+1
    def connect(self,a,b):
        if self.dat[b] < self.dat[a]:
            a,b = b,a
        v = self.dat[b]
        
        for i in range(len(self.dat)):
            if self.dat[i] == v:
                self.dat[i] = self.dat[a]
    
    def connected(self,a,b):
        return self.dat[a] == self.dat[b]

    def isLast(self,i):
        return not (self.dat[i] in self.dat[i+1:])

    def isOnly(self,i):
        return not (self.dat[i] in self.dat[:i] or self.dat[i] in self.dat[i+1:])
        
    def list(self):
        return self.dat
    def __repr__(self):
        return 'cst('+str(self.dat)+')'
    def __len__(self):
        return len(self.dat)


# _/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\_/¯\
#/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/
#\_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \
#/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/
#\_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \
#/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/
#\_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \
#/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/
#\_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/ \_/

